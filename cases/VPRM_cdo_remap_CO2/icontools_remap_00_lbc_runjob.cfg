#!/usr/bin/env bash
#SBATCH --job-name="{cfg.casename}_{cfg.inidate_yyyymmddhh}_{cfg.forecasttime}"
#SBATCH --account={cfg.compute_account}
#SBATCH --chdir={cfg.icon_work}
#SBATCH --partition=normal
#SBATCH --time={cfg.icon_walltime} 
#SBATCH --constraint={cfg.constraint}
#SBATCH --nodes=1
#SBATCH --ntasks-per-core=1
#SBATCH --ntasks-per-node={cfg.ntasks_per_node}
#SBATCH --cpus-per-task=1
#SBATCH --output={logfile}
#SBATCH --open-mode=append
module load cray-netcdf
module load CDO
module load NCO

ulimit -s unlimited

set -x

export ECCODES_DEFINITION_PATH=/store/empa/em05/eccodes_definitions/definitions.edzw-2.12.5-2
export ECCODES_DEFINITION_PATH=$ECCODES_DEFINITION_PATH:/store/empa/em05/easybuild.backup/software/ecCodes/2.12.5-CrayGNU-20.08/share/eccodes/definitions
export ECCODES_DEFINITION_PATH=$ECCODES_DEFINITION_PATH:/project/g110/spack-install/daint/eccodes/2.19.0/pgi/6skdmw5lsn6mjv4esxkyalf6xogllshi/share/eccodes/definitions/
echo $ECCODES_DEFINITION_PATH

#-----------------------------------------------------------------------------
# PART I: Create auxiliary grid file which contains only the cells of the 
#         boundary zone.
#-----------------------------------------------------------------------------

cat > NAMELIST_ICONSUB_{cfg.inidate_yyyymmddhh} << EOF_1
&iconsub_nml
  grid_filename    = '{cfg.dynamics_grid_filename}',
  output_type      = 4,
  lwrite_grid      = .TRUE.,
/
&subarea_nml
  ORDER            = "{cfg.lateral_boundary_grid_order}",
  grf_info_file    = '{cfg.dynamics_grid_filename}',
  min_refin_c_ctrl = 1
  max_refin_c_ctrl = 14
/
EOF_1

srun -n 1 {cfg.iconsub_bin} \
          --nml NAMELIST_ICONSUB_{cfg.inidate_yyyymmddhh} 2>&1
#-----------------------------------------------------------------------------
# PART II: Extract boundary data
#-----------------------------------------------------------------------------

cdo selgrid,2 {cfg.lateral_boundary_grid_scratch} triangular-grid_00_lbc.nc

echo "DATAFILELIST is {datafile_list}"
for datafilename in {datafile_list} ; do
    datafile="${{datafilename##*/}}"  # get filename without path
    outdatafile=${{datafile%.*}}      # get filename without suffix

#     cdo -t ecmwf -f nc copy {cfg.input_root_meteo}/${{datafile}} tmp1lbc00.nc
#     cdo setpartabn,/users/kivanova/new_lbc_processing_chain/cases/icon-art-BRM-CDOic/mypartab,convert tmp1lbc00.nc tmp2lbc00.nc

#     cdo selname,LSM tmp2lbc00.nc input_FR_LAND00.nc
#     ncrename -h -v LSM,FR_LAND input_FR_LAND00.nc
#     cdo selname,FR_LAND {cfg.extpar_filename_scratch} output_FR_LAND0.nc
#     cdo -C -v -reducegrid,triangular-grid_00_lbc.nc output_FR_LAND0.nc output_FR_LAND00.nc
#     ncecat -O -u time output_FR_LAND00.nc output_FR_LAND00.nc # add time dimension otherwise ICON stops
#     ncks -h -A -v time input_FR_LAND00.nc output_FR_LAND00.nc # give time a value to avoid CDO warnings
#     cdo -L setctomiss,0. -ltc,0.5  input_FR_LAND00.nc input_ocean_area00.nc
#     cdo -L setctomiss,0. -gec,0.5 input_FR_LAND00.nc input_land_area00.nc
#     cdo -L setctomiss,0. -ltc,1. output_FR_LAND00.nc output_ocean_area00.nc
#     cdo -L setctomiss,0. -gtc,0. output_FR_LAND00.nc output_land_area00.nc
#     cdo -L setrtoc2,0.5,1.0,1,0 output_FR_LAND00.nc output_lsm00.nc

    # create file with ICON grid information for CDO

    # remap land area only variables (ocean points are assumed to be undefined in the input data)
#     cdo setmisstodis -selname,SMIL1,SMIL2,SMIL3,SMIL4,STL1,STL2,STL3,STL4,W_SNOW,T_SNOW tmp2lbc00.nc tmpl1lbc00.nc
#     cdo remapcon,triangular-grid_00_lbc.nc tmpl1lbc00.nc tmpl2lbc00.nc
#     cdo -s div tmpl2.nc output_land_area.nc tmp_output_l.nc
#     mv tmpl2lbc00.nc tmp_output_l00.nc

    ## remap land and ocean area differently for variables
    # ocean part
#     cdo selname,SKT tmp2lbc00.nc tmp_input_ls00.nc
#     cdo div tmp_input_ls00.nc input_ocean_area00.nc tmpls100.nc
#     cdo setmisstodis tmpls100.nc tmpls200.nc
#     cdo remapcon,triangular-grid_00_lbc.nc tmpls200.nc tmpls300.nc
#     cdo div tmpls300.nc output_ocean_area00.nc tmp_ocean_part00.nc

    # land part
#     cdo div tmp_input_ls00.nc input_land_area00.nc tmpls100.nc
#     cdo setmisstodis tmpls100.nc tmpls200.nc
#     cdo remapcon,triangular-grid_00_lbc.nc tmpls200.nc tmpls300.nc
#     cdo div tmpls300.nc output_land_area00.nc tmp_land_part00.nc

    # merge remapped land and ocean part
#     cdo ifthenelse output_lsm00.nc tmp_land_part00.nc tmp_ocean_part00.nc tmp_output_ls00.nc

    # remap the rest
#      ncks -h -O -x -v W_SNOW,T_SNOW,STL1,STL2,STL3,STL4,SMIL1,SMIL2,SMIL3,SMIL4,SKT,LSM tmp2lbc00.nc tmp_input_rest00.nc
#      cdo remapcon,triangular-grid_00_lbc.nc tmp_input_rest00.nc ifs_ini_lbc00.nc

    # merge remapped files plus land sea mask from EXTPAR
#     ncks -h -A tmp_output_l00.nc ifs_ini_lbc00.nc
#     ncks -h -A tmp_output_ls00.nc ifs_ini_lbc00.nc
#     ncks -h -A output_lsm00.nc  ifs_ini_lbc00.nc

    # attribute modifications
#     ncatted -h -a coordinates,FR_LAND,o,c,"clon clat" ifs_ini_lbc00.nc

    # renamings
#     ncrename -h -v FR_LAND,LSM ifs_ini_lbc00.nc
#     ncrename -h -d cell,ncells ifs_ini_lbc00.nc
#     ncrename -h -d nv,vertices ifs_ini_lbc00.nc
#     ncrename -h -v Q,QV ifs_ini_lbc00.nc
#     ncrename -h -v Z,GEOP_SFC ifs_ini_lbc00.nc

#     cdo expr,"PS=exp(LNPS)" ifs_ini_lbc00.nc PS00.nc
#     cdo merge PS00.nc ifs_ini_lbc00.nc {cfg.icon_input_icbc}/${{outdatafile}}_lbc.nc

#    cdo -t ecmwf -f nc -s remapcon,triangular-grid_00_lbc.nc {cfg.input_root_meteo}/${{datafile}} {cfg.icon_input_icbc}/test00_lbc.nc
 #   cdo setpartabn,/users/kivanova/new_lbc_processing_chain/cases/icon-art-BRM-CDOic/mypartab,convert {cfg.icon_input_icbc}/test00_lbc.nc {cfg.icon_input_icbc}/test00_lbc_setpartab.nc
   #setmissval,-9.e+15f
   # ncrename -d  cell,ncells {cfg.icon_input_icbc}/test00_lbc_setpartab.nc
  #  ncrename -d  nv,vertices {cfg.icon_input_icbc}/test00_lbc_setpartab.nc

#     ncap2 -o -s "depth=3.5;depth_2=17.5;depth_3=64;depth_4=50" {cfg.icon_input_icbc}/test00_lbc_setpartab.nc {cfg.icon_input_icbc}/test_00_change_depth.nc
#   ncap2 -s "depth_2=17.5" {cfg.icon_input_icbc}/test00_lbc_setpartab.nc {cfg.icon_input_icbc}/test_00_change_depth.nc
#   ncap2 -s "depth_3=64" {cfg.icon_input_icbc}/test00_lbc_setpartab.nc {cfg.icon_input_icbc}/test_00_change_depth.nc
#   ncap2 -s "depth_4=50" {cfg.icon_input_icbc}/test00_lbc_setpartab.nc {cfg.icon_input_icbc}/test_00_change_depth.nc
   
 #   cdo setmissval,-9.e15 {cfg.icon_input_icbc}/test00_lbc_setpartab.nc {cfg.icon_input_icbc}/${{outdatafile}}_lbc.nc

  cdo -t ecmwf -f nc copy {cfg.input_root_meteo}/${{datafile}} tmp100.nc
  cdo setpartabn,/scratch/snx3000/nponomar/processing_chain_python/processing-chain/cases/VPRM_cdo_remap_test/mypartab,convert tmp100.nc tmp200.nc
  cdo -s remapdis,triangular-grid_00_lbc.nc -selname,T,U,V,W,LNPS,QV,QI,QR,QC,QS,GEOSP tmp200.nc {cfg.icon_input_icbc}/${{outdatafile}}_lbc.nc
  cdo selvar,GEOSP {cfg.icon_input_icbc}/${{outdatafile}}_lbc.nc GEOSP.nc
  ncrename -d cell,ncells {cfg.icon_input_icbc}/${{outdatafile}}_lbc.nc
  ncrename -d nv,vertices {cfg.icon_input_icbc}/${{outdatafile}}_lbc.nc

done

#-----------------------------------------------------------------------------
# clean-up

rm -f nml.log  

#-----------------------------------------------------------------------------
exit
#-----------------------------------------------------------------------------

